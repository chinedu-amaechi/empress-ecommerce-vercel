# .github/workflows/ci.yml
name: Continuous Integration

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Check formatting
        run: npx prettier --check "**/*.{js,jsx,json,md}"

  test-frontend-admin:
    name: Test Admin Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/empress-admin-app
    env:
      VITE_API_URL: 'http://localhost:5000'
      VITE_CLOUDINARY_CLOUD_NAME: 'du7eu4jhl'
      VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './apps/empress-admin-app/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test -- --coverage
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: ./apps/empress-admin-app/coverage
          flags: frontend-admin

  test-frontend-app:
    name: Test Customer Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/empress-app
    env:
      NEXT_PUBLIC_API_URL: 'http://localhost:5000'
      NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: 'du7eu4jhl'
      NEXT_PUBLIC_STRIPE_PUBLIC_KEY: 'pk_test_51PoDpXP1pCIivRmDxxxxxxxx' # Replace with actual public key
      NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './apps/empress-app/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test -- --coverage
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: ./apps/empress-app/coverage
          flags: frontend-customer

  test-backend:
    name: Test Backend API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/empress-backend
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand({serverStatus:1}).ok' | mongosh --quiet | grep 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      MONGODB_URI: mongodb://localhost:27017/empress_test
      MONGODB_DB_NAME: empress_test
      JWT_SECRET: '69eqwl3fDWqpit0V'
      CLOUDINARY_CLOUD_NAME: 'du7eu4jhl'
      CLOUDINARY_API_KEY: '166487844245893'
      CLOUDINARY_API_SECRET: 'gHCefgSVKgsipNIlBbv-o-P0DSM'
      CLIENT_URL: 'http://localhost:3000'
      ADMIN_URL: 'http://localhost:5173'
      YOUR_DOMAIN: 'http://localhost:3000'
      STRIPE_API_KEY: 'sk_test_51PoDpXP1pCIivRmDfoBitAX2rf635lRHXETuaF6qW4dJwPABBFcnQnvXC4VovT1oFNrNmE7RDl6AOkb9TN2HUuEK00j4ss46vw'
      MAILTRAP_TOKEN: '45e5600500c65c3d4c522c0d7f920723'
      MAILTRAP_SENDER_EMAIL: 'hello@devfaruqayo.com'
      MAILTRAP_SENDER_NAME: 'Mailtrap Test'
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './apps/empress-backend/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Run security scan
        run: npm run security-scan || true

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [test-frontend-app, test-backend]
    env:
      CYPRESS_BASE_URL: 'http://localhost:3000'
      CYPRESS_API_URL: 'http://localhost:5000'
      MONGODB_URI: mongodb://localhost:27017/empress_test
      MONGODB_DB_NAME: empress_test
      JWT_SECRET: '69eqwl3fDWqpit0V'
      CLOUDINARY_CLOUD_NAME: 'du7eu4jhl'
      CLOUDINARY_API_KEY: '166487844245893'
      CLOUDINARY_API_SECRET: 'gHCefgSVKgsipNIlBbv-o-P0DSM'
      CLIENT_URL: 'http://localhost:3000'
      ADMIN_URL: 'http://localhost:5173'
      YOUR_DOMAIN: 'http://localhost:3000'
      STRIPE_API_KEY: 'sk_test_51PoDpXP1pCIivRmDfoBitAX2rf635lRHXETuaF6qW4dJwPABBFcnQnvXC4VovT1oFNrNmE7RDl6AOkb9TN2HUuEK00j4ss46vw'
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install Cypress
        run: npm install -g cypress
      - name: Start backend services for testing
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./docker-compose.test.yml"
      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: ./apps/empress-app
          start: npm run dev
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: chrome
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [e2e-tests]
    env:
      K6_BASE_URL: 'http://localhost:5000'
    steps:
      - uses: actions/checkout@v3
      - name: Run k6 Performance Tests
        uses: grafana/k6-action@v0.3.0
        with:
          filename: ./apps/empress-app/performance-tests/ci-test.js
          flags: --out json=results.json
      - name: Upload performance test results
        uses: actions/upload-artifact@v3
        with:
          name: k6-report
          path: results.json